#!/bin/bash

LATEST=${LATEST:-yes}

clone_and_build() {
  mkdir -p /tmp/clone
  cd /tmp/clone
  git clone https://github.com/convox/$1
  cd $1
  /usr/bin/git-restore-mtime .
  docker build -t convox/$1:$2 .
}

tag_latest() {
  docker tag -f convox/$1:$2 convox/$1:latest
  docker push convox/$1:latest
}

set -e

docker login -e $DOCKER_EMAIL -u $DOCKER_USERNAME -p $DOCKER_PASSWORD

tag=$(date +%Y%m%d%H%M%S)

mkdir -p /tmp/release
cd /tmp/release

clone_and_build app $tag
clone_and_build build $tag
clone_and_build kernel $tag
clone_and_build registry $tag

mkdir -p /go
export GOPATH=/go
go get -u github.com/convox/kernel
cd $GOPATH/src/github.com/convox/kernel
make release VERSION=$tag LATEST=${LATEST}

docker push convox/app:$tag
docker push convox/build:$tag
docker push convox/kernel:$tag
docker push convox/registry:$tag

if [ "${LATEST}" == "yes" ]; then
  tag_latest app $tag
  tag_latest build $tag
  tag_latest kernel $tag
  tag_latest registry $tag
fi

echo "kernel released: $tag"

curl -s -X POST -d "payload={\"text\":\"kernel released: $tag\"}" $SLACK_WEBHOOK_URL

ci $tag
